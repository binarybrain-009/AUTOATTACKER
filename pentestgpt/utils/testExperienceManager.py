import unittest
from experience_manager import ExperienceManager
from vectorDB import customVectorDB
import time


class TestExperienceManagerAndVectorDB(unittest.TestCase):

    def setUp(self):
        self.project_name = "testautoattackerproject"  # Ensure lowercase and no special characters
        self.vectordb_name = "test_autoattacker_vectordb"
        self.experience_manager = ExperienceManager(project_name=self.project_name, vectordb_name=self.vectordb_name)
        self.vector_db = customVectorDB(project_name=self.project_name, vectordb_name=self.vectordb_name)

    # def tearDown(self):
    #     self.vector_db.delete_index()

    def test_store_and_retrieve_text(self):
        test_text = "This is a test text for vector database."
        self.vector_db.store_text(test_text)
        time.sleep(5)  # Wait for the vector database to index the text
        results = self.vector_db.retrieval("test text")

        print("Stored Text Retrieval Results:", results)  # Debugging line
        self.assertGreater(len(results), 0)
        if results:
            self.assertIn("This is a test text for vector database.", results[0].page_content)

    def test_store_and_retrieve_file(self):
        test_file_content = "This is a test file content for vector database."
        with open("test_file.txt", "w") as f:
            f.write(test_file_content)
        self.vector_db.store_file("test_file.txt")
        time.sleep(5)  # Wait for the vector database to index the text
        results = self.vector_db.retrieval("test file content")
        print("Stored File Retrieval Results:", results)  # Debugging line
        self.assertGreater(len(results), 0)
        if results:
            self.assertIn("This is a test file content for vector database.", results[0].page_content)

    def test_store_and_retrieve_experience(self):
        test_action_plan = "Execute shell command to escalate privileges."
        self.experience_manager.store_experience(test_action_plan, metadata=None)
        time.sleep(5)  # Wait for the vector database to index the text
        results = self.experience_manager.retrieve_experiences("escalate privileges", top_k=1)
        print("Stored Experience Retrieval Results:", results)  # Debugging line
        self.assertGreater(len(results), 0)
        if results:
            self.assertIn("Execute shell command to escalate privileges.", results[0].page_content)

if __name__ == "__main__":
    unittest.main()
